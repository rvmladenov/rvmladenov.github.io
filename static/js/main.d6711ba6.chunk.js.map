{"version":3,"sources":["components/User/UserOptions/UserOptions.js","core/axios.js","core/api.js","components/Results/DataTable/DataTable.js","components/Results/Results.js","components/TemplateSearch/TemplateSearch.js","components/QuestionSearch/QuestionSearch.js","components/Controls/ControlsConstants.js","components/Controls/Controls.js","containers/Home/Home.js","store/actions/QuestionsActions.js","store/actions/ResultActions.js","store/actions/TemplateActions.js","components/Header/Header.js","App.js","serviceWorker.js","store/reducers/TemplatesStore.js","store/reducers/QuestionsStore.js","store/reducers/ResultsStore.js","store/middleware/ModifyDataBeforeStore.js","index.js"],"names":["SimpleMenu","React","useState","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","instance","axios","create","baseURL","api","getQuestions","get","getTemplates","MaterialTableDemo","props","columns","title","field","render","rowData","name","questions","data","state","templates","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","padding","spacing","textAlign","color","text","secondary","Results","resultTemplates","ThemeSearch","Autocomplete","multiple","options","getOptionLabel","option","renderTags","value","getTagProps","map","index","missingTemplate","template","indexOf","key","className","Chip","label","onChange","newValue","onSelect","renderInput","params","TextField","variant","hasAll","QuestionSearch","length","unshift","filter","question","Object","freeze","TEMPLATE","QUESTION","flexGrow","Controls","classes","type","answer","CONTROL_TYPE","onTemplatesSelect","onQuestionsSelect","console","log","Grid","container","item","xs","sm","Paper","selectedTemplates","questionIds","selectedQuestions","Home","filteredTemplates","filteredQuestions","checkExistance","arr","target","every","v","includes","selectedQuestionIdsArr","setState","questionIndex","foundedQuestion","find","join","onAddResults","updateTemplatesState","crossFilterData","then","questionsData","onAddQuestions","templatesData","onAddTemplates","catch","errorTemplates","errorQuestions","this","results","Component","connect","dispatch","questionActions","ResultActions","templateActions","onSetSelectedTemplates","onSetSelectedQuestions","width","marginTop","TransitionAlerts","setOpen","open2","setOpen2","Collapse","in","Alert","severity","action","IconButton","aria-label","size","fontSize","header","paddingTop","paddingBottom","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","mixins","content","button","textDecoration","MiniDrawer","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","edge","Typography","noWrap","direction","justify","Drawer","Divider","List","exact","to","ListItem","ListItemIcon","ListItemText","primary","path","component","from","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialState","reducer","modifyDataBeforeStore","store","next","prop","result","getState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","TemplateStore","QuestionsStore","ResultStore","createStore","applyMiddleware","thunk","ReactDOM","basename","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d6711ba6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport default function SimpleMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} >\r\n        <PersonIcon />\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://search-app-391dc.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import axios from './axios';\r\n\r\nconst api = {\r\n    getQuestions: () => {\r\n        return axios.get('/questions.json')\r\n    },\r\n    getTemplates: () => {\r\n        return axios.get('/templates.json')\r\n    }\r\n}\r\n\r\nexport default api;","// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n// import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Chip from '@material-ui/core/Chip';\r\n// import DoneIcon from '@material-ui/icons/Done';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       width: '100%',\r\n//     },\r\n//     heading: {\r\n//       fontSize: theme.typography.pxToRem(15),\r\n//       flexBasis: '33.33%',\r\n//       flexShrink: 0,\r\n//     },\r\n//     secondaryHeading: {\r\n//       fontSize: theme.typography.pxToRem(15),\r\n//       color: theme.palette.text.secondary,\r\n//     },\r\n//     chipsRoot: {\r\n//       display: 'flex',\r\n//       justifyContent: 'center',\r\n//       flexWrap: 'wrap',\r\n//       '& > *': {\r\n//         margin: theme.spacing(0.5),\r\n//       }\r\n//     }\r\n//   }));\r\n\r\n// export default function ExpansionPanelList(props) {\r\n//   const classes = useStyles();\r\n//   const [expanded, setExpanded] = React.useState(false);\r\n\r\n//   const handleChange = (panel) => (event, isExpanded) => {\r\n//     setExpanded(isExpanded ? panel : false);\r\n//   };\r\n\r\n//   const handleDelete = () => {\r\n//     console.info('You clicked the delete icon.');\r\n//   };\r\n\r\n//     return (\r\n//         <div className={classes.root}>\r\n//             <Grid container>\r\n//                 <Grid item xs={12}>\r\n\r\n//                 <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n//                     <ExpansionPanelSummary\r\n//                     expandIcon={<ExpandMoreIcon />}\r\n//                     aria-controls=\"panel1bh-content\"\r\n//                     id=\"panel1bh-header\"\r\n//                     >\r\n//                     <Typography className={classes.heading}>{props.template.name}</Typography>\r\n//                     <Typography className={classes.secondaryHeading}>{props.template.title || '<no title provided>'}</Typography>\r\n//                     </ExpansionPanelSummary>\r\n//                     <ExpansionPanelDetails>\r\n//                     <Typography>\r\n//                       <div className={classes.chipsRoot}>\r\n//                         Questions:\r\n//                         {props.template.questions.map(question => (\r\n//                           <Chip\r\n//                             label={question}\r\n//                             clickable\r\n//                             color=\"primary\"\r\n//                           />\r\n//                         ))}\r\n//                       </div>\r\n//                     </Typography>\r\n//                     </ExpansionPanelDetails>\r\n//                 </ExpansionPanel>\r\n\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </div>\r\n//   );\r\n// }\r\n\r\nimport React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nexport default function MaterialTableDemo(props) {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { \r\n        title: 'Template Name',\r\n        field: 'name',\r\n        render: rowData => <h3>{rowData.name}</h3>\r\n      },\r\n      { title: 'Description', field: 'description' },\r\n      { \r\n        title: 'Questions',\r\n        field: 'questions',\r\n        render: rowData => <h4>{rowData.questions}</h4>\r\n      }\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={props.templates}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DataTable from './DataTable/DataTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  // let results = (\r\n  //   <Grid container spacing={3}>\r\n  //     <Grid item xs={12}>\r\n  //       <Paper className={classes.paper}><h3>Please select templates from the list to view their data :)</h3></Paper>\r\n  //     </Grid>\r\n  //   </Grid>\r\n  // );\r\n\r\n  // if (props.resultTemplates && props.resultTemplates.length > 0) {\r\n    // let results = props.resultTemplates.map(template => (\r\n    //   <div key={template.id} className={classes.root}>\r\n    //     <ExpansionPanel template={template} />\r\n    //   </div>\r\n    // ));\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <DataTable templates={props.resultTemplates} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport './TemplateSearch.scss';\r\n\r\nconst ThemeSearch = (props) => {\r\n  const templates = props.templates.templates || [];\r\n\r\n  return (\r\n    <Autocomplete\r\n        multiple\r\n        id=\"theme-search-autocomplete\"\r\n        options={templates}\r\n        getOptionLabel={(option) => option.name}\r\n        renderTags={(value, getTagProps) =>\r\n        value.map((option, index) => {\r\n          const filteredTemplatesIds = props.templates.templates.map(template => template.id);\r\n\r\n            const isTemplateInTheList = filteredTemplatesIds.indexOf(option.id) >= 0;\r\n            const missingTemplate = !isTemplateInTheList ? 'not-included-template' : 'included-template';\r\n\r\n            return <span key={option.id} className={missingTemplate}>\r\n              <Chip label={option.name} {...getTagProps({ index })} />\r\n            </span>;\r\n        })\r\n        }\r\n        onChange={(event, newValue) => {\r\n            props.onSelect(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Themes List\" variant=\"outlined\" />\r\n        )}\r\n    />\r\n    );\r\n}\r\n\r\nexport default ThemeSearch;","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nlet hasAll = false;\r\nconst selectAllId = -1;\r\n\r\nconst QuestionSearch = (props) => {\r\n  const questions = props.questions.questions || [];\r\n//   const selectedQuestions = props.questions.selectedQuestions\r\n  if (questions.length > 0 && !hasAll) {\r\n    questions.unshift({id: selectAllId, name: 'All Questions'});\r\n    hasAll = true;\r\n  }\r\n\r\n  const onSelect = (newValue) => {\r\n    // If \"Select All\" was selected - insert all questions \r\n    if (newValue && newValue.length > 0) {\r\n        const hasSelectAll = newValue.filter(question => {\r\n            return question.id === selectAllId;\r\n        }).length > 0;\r\n\r\n        if (hasSelectAll) {\r\n            newValue = [...props.questions.questions];\r\n        }\r\n    }\r\n \r\n      props.onSelect(newValue);\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n        multiple\r\n        id=\"questions-search-autocomplete\"\r\n        options={questions}\r\n        getOptionLabel={(option) => option.name}\r\n        renderTags={(value, getTagProps) =>\r\n        value.map((option, index) => (\r\n            <Chip label={option.name} {...getTagProps({ index })} />\r\n        ))\r\n        }\r\n        onChange={(event, newValue) => {\r\n            onSelect(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n            <TextField {...params} label=\"Questions List\" variant=\"outlined\" />\r\n        )}\r\n    />\r\n    );\r\n}\r\n\r\nexport default QuestionSearch;","export default Object.freeze({\r\n    TEMPLATE: 'TEMPLATE',\r\n    QUESTION: 'QUESTION'\r\n});","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport TemplateSearch from '../TemplateSearch/TemplateSearch';\r\nimport QuestionSearch from '../QuestionSearch/QuestionSearch';\r\nimport CONTROL_TYPE from './ControlsConstants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function Controls(props) {\r\n  const classes = useStyles();\r\n\r\n  const onSelect = (type, answer) => {\r\n    switch (type) {\r\n      case CONTROL_TYPE.TEMPLATE:\r\n        props.onTemplatesSelect(answer)\r\n        break;\r\n        \r\n        case CONTROL_TYPE.QUESTION:\r\n          props.onQuestionsSelect(answer);\r\n      break;\r\n    \r\n      default:\r\n        // TODO: Should throw an error\r\n        console.log(\"incorrect type of an answer\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={6} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <TemplateSearch templates={ { \r\n                        templates: props.templates.templates,\r\n                        selectedTemplates: props.templates.selectedTemplates,\r\n                        questionIds: props.questions.questions.map(question => question.id)\r\n                      } } onSelect={(answer) => {\r\n                        onSelect(CONTROL_TYPE.TEMPLATE, answer)\r\n                      }} />\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={6} sm={4}>\r\n                <Paper className={classes.paper}>\r\n                    <QuestionSearch questions={ { questions: props.questions.questions, selectedQuestions: props.questions.selectedQuestions } } onSelect={(answer) => {\r\n                        onSelect(CONTROL_TYPE.QUESTION, answer)\r\n                      }} />\r\n                </Paper>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as questionActions from '../../store/actions/QuestionsActions';\r\nimport * as templateActions from '../../store/actions/TemplateActions';\r\nimport * as ResultActions from '../../store/actions/ResultActions';\r\n\r\nimport api from '../../core/api';\r\nimport Results from '../../components/Results/Results';\r\nimport Controls from '../../components/Controls/Controls';\r\nimport './Home.scss';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        filteredTemplates: [],\r\n        filteredQuestions: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        api.getQuestions()\r\n            .then(questionsData => {\r\n                this.props.onAddQuestions(questionsData.data);\r\n                this.setState({ filteredQuestions: questionsData.data });\r\n                // this.props.filteredQuestions = questionsData.data;\r\n                \r\n                api.getTemplates()\r\n                .then(templatesData => {\r\n                    this.props.onAddTemplates(templatesData.data);\r\n                    this.setState({ filteredTemplates: templatesData.data });\r\n                    // this.props.filteredTemplates = templatesData.data;\r\n                })\r\n                .catch(errorTemplates => {\r\n                    console.log(errorTemplates);\r\n                });\r\n            })\r\n            .catch(errorQuestions => {\r\n                console.log(errorQuestions);\r\n            });\r\n    }\r\n\r\n    // TODO: move that to a helper service. It is been used in TemplateSearch.js and ExpansionPanel.js to determine if the template has all selected questions\r\n    checkExistance = (arr, target) => {\r\n        return target.every(v => arr.includes(v))\r\n    };\r\n\r\n    onQuestionsSelect = questions => {\r\n        const selectedQuestionIdsArr = questions.map(question => question.id );\r\n        const filteredTemplates = this.props.templates.filter(template => {\r\n            return this.checkExistance(template.questions, selectedQuestionIdsArr);\r\n        });\r\n\r\n        this.setState({ filteredTemplates: filteredTemplates });\r\n\r\n        // this.props.onSetSelectedQuestions(questions);\r\n    };\r\n\r\n    onTemplatesSelect = templates => {\r\n        const resultTemplates = templates.map(template => {\r\n\r\n            const questions = template.questions.map(questionIndex => {\r\n                const foundedQuestion = this.props.questions.find(question => {\r\n                    return question.id === questionIndex;\r\n                });\r\n\r\n                return foundedQuestion ? foundedQuestion.name : '<undefined-question>';\r\n            })\r\n            \r\n            return {...template, questions: questions.join(', ')};\r\n        });\r\n\r\n        this.props.onAddResults(resultTemplates);\r\n    };\r\n\r\n    updateTemplatesState = () => {\r\n        // TODO:\r\n    };\r\n\r\n    crossFilterData = () => {\r\n        // TODO:\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"Home\">\r\n               <div className=\"Controls\">\r\n                    <Controls\r\n                        questions={ { questions: this.state.filteredQuestions, selectedQuestions: this.props.selectedQuestions } }\r\n                        templates={ { templates: this.state.filteredTemplates, selectedTemplates: this.props.selectedTemplates } }\r\n                        onQuestionsSelect={this.onQuestionsSelect}\r\n                        onTemplatesSelect={this.onTemplatesSelect}/>\r\n                </div> \r\n\r\n                <div className=\"Results\">\r\n                    <Results resultTemplates={this.props.results} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        templates: state.templates.templates,\r\n        questions: state.questions.questions,\r\n        selectedTemplates: state.templates.selectedTemplates,\r\n        selectedQuestions: state.questions.selectedQuestions,\r\n        results: state.results.templates\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddQuestions: (questions) => {\r\n            dispatch(questionActions.addQuestions(questions))\r\n        },\r\n        onAddResults  : (templates) => dispatch(ResultActions.addResultTemplates(templates)),\r\n        onAddTemplates: (templates) => dispatch(templateActions.addTemplates(templates)),\r\n        onSetSelectedTemplates: (templates) => dispatch(templateActions.setSelectedTemplates(templates)),\r\n        onSetSelectedQuestions: (templates) => dispatch(questionActions.setSelectedQuestions(templates))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","export const ADD_QUESTIONS = 'ADD_QUESTIONS';\r\nexport const SET_SELECTED_QUESTIONS = 'ADD_SELECTED_QUESTIONS';\r\n\r\nexport const addQuestions = ( questions ) => {\r\n    return {\r\n        type: ADD_QUESTIONS,\r\n        value: questions\r\n    };\r\n};\r\n\r\nexport const setSelectedQuestions = ( questions ) => {\r\n    return {\r\n        type: SET_SELECTED_QUESTIONS,\r\n        value: questions\r\n    };\r\n};","export const ADD_RESULT_TEMPLATES = 'ADD_RESULT_TEMPLATE';\r\n\r\nexport const addResultTemplates = ( templates ) => {\r\n    return {\r\n        type: ADD_RESULT_TEMPLATES,\r\n        value: templates\r\n    };\r\n};","export const ADD_TEMPLATES = 'ADD_TEMPLATE';\r\nexport const ADD_RESULT_TEMPLATES = 'ADD_RESULT_TEMPLATES';\r\nexport const SET_SELECTED_TEMPLATES = 'SET_SELECTED_TEMPLATES';\r\nexport const REMOVE_TEMPLATE = 'REMOVE_TEMPLATE';\r\n\r\nexport const addTemplates = ( templates ) => {\r\n    return {\r\n        type: ADD_TEMPLATES,\r\n        value: templates\r\n    };\r\n};\r\n\r\nexport const setSelectedTemplates = ( templates ) => {\r\n    return {\r\n        type: SET_SELECTED_TEMPLATES,\r\n        value: templates\r\n    };\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function TransitionAlerts() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [open2, setOpen2] = React.useState(true);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          severity=\"info\"\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          You can filter templates based on selected questions\r\n        </Alert>\r\n      </Collapse>\r\n      <Collapse in={open2}>\r\n        <Alert\r\n          severity=\"info\"\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen2(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          The templates which doesnt hold ALL of the selected questions but have been selected are colored in red\r\n        </Alert>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport UserOptions from './components/User/UserOptions/UserOptions'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\n\nimport './App.scss';\n\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\nimport Home from './containers/Home/Home';\nimport Header from './components/Header/Header';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  header: {\n    paddingTop: '5rem',\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingBottom: 0\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingTop: 0\n  },\n  button: {\n    color: 'inherit',\n    textDecoration: 'none'\n  }\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n              <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Theme Search App\n          </Typography>\n\n          <Grid direction=\"row\" justify=\"flex-end\" alignItems=\"center\" container>\n            <Grid item>\n                <UserOptions />\n            </Grid>\n        </Grid>\n\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n\n        <Divider />\n        <List>\n          {['Home'].map((text, index) => (\n            <NavLink className={classes.button} key=\"homeLink\" exact to=\"/home\">\n              <ListItem button key={text}>\n                  <ListItemIcon><FingerprintIcon /></ListItemIcon>\n                  <ListItemText primary={text} />\n              </ListItem>\n            </NavLink>\n          ))}\n        </List>\n        <Divider />\n\n      </Drawer>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <header className={classes.header}>\n            <Header />\n          </header>\n        </Grid>\n        <Grid item xs={12}>\n          <header >\n            <main className={classes.content}>\n              <div>\n                <Switch>\n                    <Route path=\"/home\" component={Home} />\n                    <Redirect exact from=\"/\" to=\"/home\" />\n                </Switch>\n              </div>\n            </main>\n          </header>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/TemplateActions';\r\n\r\nconst initialState = {\r\n    templates: [],\r\n    selectedTemplates: [],\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_TEMPLATES:\r\n            return {\r\n                ...state,\r\n                templates: action.value\r\n            };\r\n        case actionTypes.SET_SELECTED_TEMPLATES:\r\n            return {\r\n                ...state,\r\n                selectedTemplates: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/QuestionsActions';\r\n\r\nconst initialState = {\r\n    questions: [], // [{ [id: any]: { name: string } }]\r\n    selectedQuestions: [] // [{ [id: any]: { name: string } }]\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: action.value\r\n            };\r\n        case actionTypes.SET_SELECTED_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                selectedQuestions: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/ResultActions';\r\n\r\nconst initialState = {\r\n    templates: []\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_RESULT_TEMPLATES:\r\n            return {\r\n                ...state,\r\n                templates: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { ADD_QUESTIONS } from '../actions/QuestionsActions';\r\nimport { ADD_TEMPLATES } from '../actions/TemplateActions';\r\n\r\nconst modifyDataBeforeStore = store => {\r\nreturn next => {\r\n    return action => {\r\n        // Modify data before sending it to the store\r\n        switch (action.type) {\r\n            case ADD_QUESTIONS:\r\n            case ADD_TEMPLATES:\r\n                const value = action.value.map(prop => {\r\n                    return prop;\r\n                })\r\n                action.value = [...value];\r\n            break;\r\n        \r\n            default:\r\n            break;\r\n        }\r\n\r\n        const result = next(action);\r\n\r\n        console.log('[Middleware] next state', store.getState()); // Gives you the updated in the store state\r\n        return result;\r\n    }\r\n}\r\n};\r\n\r\nexport default modifyDataBeforeStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, compose, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport TemplateStore from './store/reducers/TemplatesStore';\r\nimport QuestionsStore from './store/reducers/QuestionsStore';\r\nimport ResultStore from './store/reducers/ResultsStore';\r\nimport modifyDataBeforeStore from './store/middleware/ModifyDataBeforeStore';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({ \r\n  templates: TemplateStore,\r\n  questions: QuestionsStore,\r\n  results: ResultStore });\r\n\r\nconst store = createStore(rootReducer, composeEnhancers( applyMiddleware(modifyDataBeforeStore, thunk) ));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/search-app\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}